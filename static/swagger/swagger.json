{
  "swagger": "2.0",
  "info": {
    "description": "",
    "version": "0.0.1",
    "title": "Technical Test API",
    "contact": {
      "email": "matt@mcinnes.me"
    }
  },
  "host": "localhost:3000",
  "basePath": "/",
  "tags": [
    {
      "name": "user",
      "description": "Operations about user"
    },
    {
      "name": "email",
      "description": "Operations about emails"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/users": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "List current users",
        "description": "",
        "operationId": "",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of values to be returned",
            "required": false,
            "type": "number",
            "items": {
              "default": "50"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to be returned",
            "required": false,
            "type": "number",
            "items": {
              "default": "1"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Key and Direction to sort by. Format as {key}:{direction}",
            "required": false,
            "type": "string",
            "items": {
              "default": "id:ASC"
            }
          },
          {
            "name": "searchKey",
            "in": "query",
            "description": "Key to perform a search on",
            "required": false,
            "type": "string",
            "items": {
              "default": ""
            }
          },
          {
            "name": "searchValue",
            "in": "query",
            "description": "Value to search searchKey for",
            "required": false,
            "type": "string",
            "items": {
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/user/{userid}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "List emails sent to a user",
        "description": "Returns history of emails sent to specified user",
        "operationId": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userid",
            "in": "path",
            "description": "ID of user to query",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of values to be returned",
            "required": false,
            "type": "number",
            "items": {
              "default": "50"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to be returned",
            "required": false,
            "type": "number",
            "items": {
              "default": "1"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Key and Direction to sort by. Format as {key}:{direction}",
            "required": false,
            "type": "string",
            "items": {
              "default": "id:ASC"
            }
          },
          {
            "name": "searchKey",
            "in": "query",
            "description": "Key to perform a search on",
            "required": false,
            "type": "string",
            "items": {
              "default": ""
            }
          },
          {
            "name": "searchValue",
            "in": "query",
            "description": "Value to search searchKey for",
            "required": false,
            "type": "string",
            "items": {
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Email"
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/emails": {
      "get": {
        "tags": [
          "email"
        ],
        "summary": "List all sent emails",
        "description": "Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing.",
        "operationId": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of values to be returned",
            "required": false,
            "type": "number",
            "items": {
              "default": "50"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to be returned",
            "required": false,
            "type": "number",
            "items": {
              "default": "1"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Key and Direction to sort by. Format as {key}:{direction}",
            "required": false,
            "type": "string",
            "items": {
              "default": "id:ASC"
            }
          },
          {
            "name": "searchKey",
            "in": "query",
            "description": "Key to perform a search on",
            "required": false,
            "type": "string",
            "items": {
              "default": ""
            }
          },
          {
            "name": "searchValue",
            "in": "query",
            "description": "Value to search searchKey for",
            "required": false,
            "type": "string",
            "items": {
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Email"
              }
            }
          },
          "400": {
            "description": "Invalid tag value"
          }
        }
      }
    },
    "/email": {
      "put": {
        "tags": [
          "email"
        ],
        "summary": "Send an email",
        "description": "Sends an email to a user",
        "operationId": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User and Email type",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmailPut"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Email"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "email": {
          "type": "string",
          "format": "email"
        },
        "username": {
          "type": "string",
          "description": "Unique string"
        }
      }
    },
    "Email": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "EmailPut": {
      "type": "object",
      "properties": {
        "user": {
          "type": "integer",
          "format": "int64",
          "description": "User ID to send email to"
        },
        "type": {
          "type": "string",
          "description": "Type of email to send"
        }
      }
    },
    "ApiResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "data": {
          "type": "object"
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}